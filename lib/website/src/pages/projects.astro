---
import { SectionHeaderStandard } from "@walle/components";
import { BaseLayout } from "@walle/layouts";
import { Icon } from "astro-icon/components";

interface GitHubRepo {
  name: string;
  description: string | null;
  html_url: string;
  stargazers_count: number;
  forks_count: number;
  updated_at: string;
  archived: boolean;
  fork: boolean;
}

interface ProjectsData {
  personalProjects: GitHubRepo[];
  italiaOpenSourceProjects: GitHubRepo[];
}

async function fetchGitHubProjects(
  type: "users" | "orgs",
  account: string,
  limit: number
): Promise<GitHubRepo[]> {
  try {
    const response = await fetch(
      `https://api.github.com/${type}/${account}/repos?sort=updated&per_page=${limit}`
    );
    if (!response.ok) throw new Error("Failed to load projects");

    const repos: GitHubRepo[] = await response.json();
    const filterHiddenRepository = ["FabrizioCafolla", "fabriziocafolla.com"];

    return repos.filter((repo) => !repo.fork && !filterHiddenRepository.includes(repo.name));
  } catch (error) {
    console.error("Error loading projects:", error);
    return [];
  }
}

function sortProjectsByStars(projects: GitHubRepo[]): GitHubRepo[] {
  return [...projects].sort((a, b) => {
    // Se uno Ã¨ archiviato e l'altro no, quello non archiviato va prima
    if (a.archived && !b.archived) return 1;
    if (!a.archived && b.archived) return -1;

    // Se entrambi hanno lo stesso stato di archiviazione, ordina per stelle (decrescente)
    return b.stargazers_count - a.stargazers_count;
  });
}

function formatDate(dateString: string): string {
  const options: Intl.DateTimeFormatOptions = {
    year: "numeric",
    month: "short",
    day: "numeric",
  };
  return new Date(dateString).toLocaleDateString("en-US", options);
}

function formatProjectContentWithIcons(repo: GitHubRepo) {
  const description = repo.description || "No description available";

  return {
    description,
    stats: [
      {
        icon: "mdi:star",
        text: repo.stargazers_count.toString(),
        label: "stars",
      },
      {
        icon: "mdi:source-fork",
        text: repo.forks_count.toString(),
        label: "forks",
      },
      {
        icon: "mdi:calendar-clock",
        text: formatDate(repo.updated_at),
        label: "updated",
      },
    ],
  };
}

// Fetch dei progetti
const [personalProjectsRaw, italiaOpenSourceProjectsRaw] = await Promise.all([
  fetchGitHubProjects("users", "FabrizioCafolla", 10),
  fetchGitHubProjects("orgs", "italia-opensource", 3),
]);

// Ordina i progetti per stelle con archiviati in fondo
const personalProjects = sortProjectsByStars(personalProjectsRaw);
const italiaOpenSourceProjects = sortProjectsByStars(italiaOpenSourceProjectsRaw);

const projectsData: ProjectsData = {
  personalProjects,
  italiaOpenSourceProjects,
};
---

<BaseLayout headerTitle="Projects">
  <SectionHeaderStandard title="Projects" variant="white" />

  <section class="projects-section">
    <div class="container">
      {
        projectsData.italiaOpenSourceProjects.length > 0 && (
          <div class="projects-group">
            <div class="group-header">
              <h2>Italia Open Source</h2>
              <p class="group-description">
                Italian Open-Source is the first platform dedicated to Italian open-source world
              </p>
            </div>
            <div class="projects-grid">
              {projectsData.italiaOpenSourceProjects.map((repo) => {
                const projectData = formatProjectContentWithIcons(repo);
                return (
                  <article class="project-card">
                    <a
                      href={repo.html_url}
                      target="_blank"
                      rel="noopener noreferrer"
                      class="project-link"
                    >
                      <div class="project-header">
                        <div class="project-title-row">
                          <h3 class="project-title">{repo.name}</h3>
                          {repo.archived && <span class="archived-badge">Archived</span>}
                        </div>
                        <span class="project-badge italia-badge">Italia OS</span>
                      </div>

                      <p class="project-description">{projectData.description}</p>

                      <div class="project-stats">
                        <div class="stat-item">
                          <Icon name="mdi:star" class="stat-icon" />
                          <span>{repo.stargazers_count}</span>
                        </div>
                        <div class="stat-item">
                          <Icon name="mdi:source-fork" class="stat-icon" />
                          <span>{repo.forks_count}</span>
                        </div>
                        <div class="stat-item">
                          <Icon name="mdi:calendar-clock" class="stat-icon" />
                          <span>{formatDate(repo.updated_at)}</span>
                        </div>
                      </div>
                    </a>
                  </article>
                );
              })}
            </div>
          </div>
        )
      }

      {
        projectsData.personalProjects.length > 0 && (
          <div class="projects-group">
            <div class="group-header">
              <h2>Personal Projects</h2>
              <p class="group-description">Side projects and open source contributions</p>
            </div>
            <div class="projects-grid">
              {projectsData.personalProjects.map((repo) => {
                const projectData = formatProjectContentWithIcons(repo);
                return (
                  <article class="project-card">
                    <a
                      href={repo.html_url}
                      target="_blank"
                      rel="noopener noreferrer"
                      class="project-link"
                    >
                      <div class="project-header">
                        <div class="project-title-row">
                          <h3 class="project-title">{repo.name}</h3>
                          {repo.archived && <span class="archived-badge">Archived</span>}
                        </div>
                      </div>

                      <p class="project-description">{projectData.description}</p>

                      <div class="project-stats">
                        <div class="stat-item">
                          <Icon name="mdi:star" class="stat-icon" />
                          <span>{repo.stargazers_count}</span>
                        </div>
                        <div class="stat-item">
                          <Icon name="mdi:source-fork" class="stat-icon" />
                          <span>{repo.forks_count}</span>
                        </div>
                        <div class="stat-item">
                          <Icon name="mdi:calendar-clock" class="stat-icon" />
                          <span>{formatDate(repo.updated_at)}</span>
                        </div>
                      </div>
                    </a>
                  </article>
                );
              })}
            </div>
          </div>
        )
      }

      {
        projectsData.personalProjects.length === 0 &&
          projectsData.italiaOpenSourceProjects.length === 0 && (
            <div class="error-message">
              <Icon name="mdi:alert-circle" class="error-icon" />
              <p>An error occurred while loading projects. Please try again later.</p>
            </div>
          )
      }

      <div class="projects-group">
        <div class="group-header">
          <h2>Talks and Podcasts</h2>
          <p class="group-description">My appearances on various podcasts and talks.</p>
        </div>
        <div class="projects-grid">
          <iframe
            data-testid="embed-iframe"
            style="border-radius:12px"
            src="https://open.spotify.com/embed/episode/6qF1w5mwLTfExRxAQcMHEO/video?utm_source=generator&theme=0"
            width="624"
            height="351"
            frameBorder="0"
            allowfullscreen=""
            allow="autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture"
            loading="lazy"></iframe>
        </div>
      </div>
    </div>
  </section>
</BaseLayout>

<style>
  .projects-section {
    padding: 3rem 0 5rem;
  }

  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 1.5rem;
  }

  .projects-group {
    margin-bottom: 5rem;
  }

  .projects-group:last-child {
    margin-bottom: 0;
  }

  .group-header {
    text-align: center;
    margin-bottom: 3rem;
  }

  .group-header h2 {
    color: var(--primary-dark);
    font-size: 2rem;
    font-weight: 700;
    margin-bottom: 0.5rem;
    letter-spacing: -0.02em;
  }

  .group-description {
    color: var(--gray-dark);
    font-size: 1rem;
    margin: 0;
  }

  .projects-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
    gap: 1.5rem;
  }

  .project-card {
    background: var(--white);
    border: 1px solid #e5e7eb;
    border-radius: 12px;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    overflow: hidden;
    height: 100%;
  }

  .project-card:hover {
    border-color: var(--primary);
    box-shadow: 0 4px 12px rgba(0, 70, 173, 0.1);
    transform: translateY(-2px);
  }

  .project-link {
    display: flex;
    flex-direction: column;
    height: 100%;
    padding: 1.5rem;
    text-decoration: none;
    color: inherit;
  }

  .project-header {
    margin-bottom: 1rem;
  }

  .project-title-row {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    margin-bottom: 0.5rem;
    flex-wrap: wrap;
  }

  .project-title {
    font-size: 1.125rem;
    font-weight: 600;
    color: var(--primary-dark);
    margin: 0;
    line-height: 1.4;
    word-break: break-word;
  }

  .project-card:hover .project-title {
    color: var(--primary);
  }

  .archived-badge {
    display: inline-flex;
    align-items: center;
    font-size: 0.7rem;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    padding: 0.25rem 0.5rem;
    background: #f3f4f6;
    color: #6b7280;
    border-radius: 4px;
  }

  .project-badge {
    display: inline-flex;
    align-items: center;
    font-size: 0.75rem;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    padding: 0.25rem 0.625rem;
    border-radius: 6px;
  }

  .italia-badge {
    background: linear-gradient(135deg, var(--primary) 0%, #0056b3 100%);
    color: var(--white);
  }

  .project-description {
    font-size: 0.9375rem;
    line-height: 1.6;
    color: var(--gray-dark);
    margin: 0 0 1.25rem;
    flex: 1;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-overflow: ellipsis;
  }

  .project-stats {
    display: flex;
    gap: 1.25rem;
    padding-top: 1rem;
    border-top: 1px solid #f3f4f6;
    margin-top: auto;
  }

  .stat-item {
    display: flex;
    align-items: center;
    gap: 0.375rem;
    font-size: 0.875rem;
    color: var(--gray-dark);
  }

  .stat-icon {
    width: 16px;
    height: 16px;
    color: var(--primary);
    flex-shrink: 0;
  }

  .stat-item span {
    font-weight: 500;
    color: var(--black);
  }

  .error-message {
    text-align: center;
    padding: 3rem 2rem;
    background: var(--white);
    border-radius: 12px;
    border: 1px solid #e5e7eb;
    max-width: 500px;
    margin: 0 auto;
  }

  .error-icon {
    width: 48px;
    height: 48px;
    color: #ef4444;
    margin-bottom: 1rem;
  }

  .error-message p {
    color: var(--gray-dark);
    margin: 0;
    font-size: 1rem;
  }

  @media (max-width: 768px) {
    .projects-section {
      padding: 2rem 0 3rem;
    }

    .projects-grid {
      grid-template-columns: 1fr;
      gap: 1.25rem;
    }

    .projects-group {
      margin-bottom: 3.5rem;
    }

    .group-header {
      margin-bottom: 2rem;
    }

    .group-header h2 {
      font-size: 1.75rem;
    }

    .group-description {
      font-size: 0.9375rem;
    }

    .project-link {
      padding: 1.25rem;
    }

    .project-stats {
      gap: 1rem;
    }
  }

  @media (max-width: 480px) {
    .container {
      padding: 0 1rem;
    }

    .projects-section {
      padding: 1.5rem 0 2.5rem;
    }

    .group-header h2 {
      font-size: 1.5rem;
    }

    .project-title {
      font-size: 1rem;
    }

    .project-description {
      font-size: 0.875rem;
    }

    .project-stats {
      flex-wrap: wrap;
      gap: 0.75rem;
    }

    .stat-item {
      font-size: 0.8125rem;
    }

    .stat-icon {
      width: 14px;
      height: 14px;
    }
  }
</style>
